Git All Commands

-- To install git 
		Go to git-scm.com
		
-- To check the version of git
		git --version
		
-- Congfiguring git
		git config --global user.name : For configuring UserName
		git config --global user.email : For configuring Email
		git config --list : Show all the configurations list
		
-- Clone and status
		git clone <- some link -> : Cloning a repository on local machine
		cd - project name (cd -> change directory)
		ls - (list files) : List all the files in the project.
		git status : Displays the status of the code.
		untracked : new files that git doesn;t yet create
		modified : changed
		staged : file is ready to commited
		unmodified : unchanged
		
-- Add and Commit
		git add . : Adds new or changed files in your working directory to the Git staging area.
		git commit -m " message " : it is the record of changes.
		
-- Push
		git push : upload local repo content to remote repo
		
-- Init
		init : used to create a new git repo.
		git remote add origin <- link -> : Add new remote repo.
		git remote -v (to verify remote).		
		git branch ( to check branch ).
		git branch -M <- new branch name -> : To rename the branch.
		git push -u origin main ( To push the commited changes to the remote repo of main branch ).
		( -u : set upstream - to the the changes has to push only to main ).
		
-- Branch
		git branch ( to check branch ).
		git branch -M <- new branch name -> : To rename the branch.
		git checkout <- branch name -> : To navigate from one branch to another.
		git checkout -b <- new branch name -> : Create a new branch and then navigate from one branch to another.
		git branch -d <- branch name -> : To delete a branch.
		
-- Mergin code
		1)
		git diff <- branch name -> ( to compare commits, branches, files& more ).
		git merge <- branch name -> ( to merge 2 branches ).
		2)
		Create a PR
		Pull Request : It lets you tell others about changes you have pushed to the branch in a repository on branch GitHub.
-- Pull
		git pull origin main : Used to fetch and download content from a remote repo and immediately update the local repo to match the conetent.
		
-- Resolving Merge Conflicts
		An event that takes place when Git is unable to automatically resolve differences in code between to commits.
		
-- Undoing Changes
		1)staged changes
		git reset <- file name -> : To reset only one file changes.
		git reset : To reset all the changes added to the stage.
		2)commited changes ( for one commit )
		git reset HEAD~1 ( change HEAD to the previous commit ).
		3)commited changes ( for many commits )
		git reset <-commit hash ->
		git reset --hard <-commit hash ->
		
-- Fork
		A fork is a new repository that shares code and visibility settings with the original "upstream" repository.
		Fork is a rough copy.
		
-- To create a file or folder from terminal
		touch FileName : creates a new file in the current directory.
		mkdir FolderName : Create a new directory(folder).
		

	